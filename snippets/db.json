{
    "Record Body": {
        "prefix": "epics.record.record",
        "body": [   "record(${1:record_type}, \"${2:record_name}\") {",
                    "    ${3}",
                    "}${0}"]
    },
    "macro": {
        "prefix": "epics.macro",
        "body": "\\${${1:MACRO}\\}${0}"
    },

    "generic field": {
        "prefix": "epics.field.field",
        "body": "field(${1:field_type}, \"${2:field_value}\")${0}"
    }, 
    "description field": {
        "prefix": "epics.field.desc",
        "body": "field(DESC, \"${1:description}\")${0}"
    }, 
    "value field": {
        "prefix": "epics.field.val",
        "body": "field(VAL, \"${1:value}\")${0}"
    }, 
    "precision field": {
        "prefix": "epics.field.prec",
        "body": "field(PREC, \"${1:precision}\")${0}"
    }, 
    "engineering units field": {
        "prefix": "epics.field.egu",
        "body": "field(EGU, \"${1:unit}\")${0}"
    }, 
    "pini field": {
        "prefix": "epics.field.pini",
        "body": "field(PINI, \"${1:YES }${2:NO}\")${0}"
    }, 
    "fwd link field": {
        "prefix": "epics.field.fwd",
        "body": "field(FLNK, \"${1:record_name}\")${0}"
    }, 
    "scan field": {
        "prefix": "epics.field.scan",
        "body": "field(SCAN, \"${1:.1 second }${2:.2 second }${3:1 second }${4:10 second }${5:I/O Intr }${6:Event }${7:Passive}\")${0}"
    }, 
    "input link field": {
        "prefix": "epics.field.inp",
        "body": "field(INP, \"${1:record_name}\")${0}"
    }, 
    "output link field": {
        "prefix": "epics.field.out",
        "body": "field(OUT, \"${1:record_name}\")${0}"
    }, 
    "dtyp field": {
        "prefix": "epics.field.dtyp",
        "body": "field(DTYP, \"${1:Soft Channel }${2:stream}\")${0}"
    }, 
    "dol field": {
        "prefix": "epics.field.dol",
        "body": "field(DOL, \"${1:record_name}\")${0}"
    }, 
    "selection mechanism field": {
        "prefix": "epics.field.selm",
        "body": "field(SELM, \"${1:All }${2:Specified }${3:Mask}\")${0}"
    }, 
    "omsl field": {
        "prefix": "epics.field.omsl",
        "body": "field(OMSL, \"${1:Supervisory }${2:closed_loop}\")${0}"
    }, 
    "hihi alarm limit field": {
        "prefix": "epics.field.hihi",
        "body": "field(HIHI, \"${1:float}\")${0}"
    }, 
    "high alarm limit field": {
        "prefix": "epics.field.high",
        "body": "field(HIGH, \"${1:float}\")${0}"
    }, 
    "low alarm limit field": {
        "prefix": "epics.field.low",
        "body": "field(LOW, \"${1:float}\")${0}"
    }, 
    "lolo alarm limit field": {
        "prefix": "epics.field.lolo",
        "body": "field(LOLO, \"${1:float}\")${0}"
    }, 
    "hihi alarm severity field": {
        "prefix": "epics.field.hhsv",
        "body": "field(HHSV, \"${1:NO_ALARM }${2:MINOR }${3:MAJOR}\")${0}"
    }, 
    "high alarm severity field": {
        "prefix": "epics.field.hsv",
        "body": "field(HSV, \"${1:NO_ALARM }${2:MINOR }${3:MAJOR}\")${0}"
    }, 
    "low alarm severity field": {
        "prefix": "epics.field.lsv",
        "body": "field(LSV, \"${1:NO_ALARM }${2:MINOR }${3:MAJOR}\")${0}"
    }, 
    "lolo alarm severity field": {
        "prefix": "epics.field.llsv",
        "body": "field(LLSV, \"${1:NO_ALARM }${2:MINOR }${3:MAJOR}\")${0}"
    }, 
    "zsv alarm severity field": {
        "prefix": "epics.field.zsv",
        "body": "field(ZSV, \"${1:NO_ALARM }${2:MINOR }${3:MAJOR}\")${0}"
    }, 
    "osv alarm severity field": {
        "prefix": "epics.field.osv",
        "body": "field(OSV, \"${1:NO_ALARM }${2:MINOR }${3:MAJOR}\")${0}"
    }, 
    "cosv alarm severity field": {
        "prefix": "epics.field.cosv",
        "body": "field(COSV, \"${1:NO_ALARM }${2:MINOR }${3:MAJOR}\")${0}"
    }, 
    "alarm deadband field": {
        "prefix": "epics.field.hyst",
        "body": "field(HYST, \"${1:double}\")${0}"
    }, 
    "all alarms field": {
        "prefix": "epics.field.alarms",
        "body": [   "field(HIHI, \"${1:float}\")",
                    "field(HIGH, \"${2:float}\")",
                    "field(LOW,  \"${3:float}\")",
                    "field(LOLO, \"${4:float}\")",
                    "field(HHSV, \"${5:NO_ALARM }${6:MINOR }${7:MAJOR}\")",
                    "field(HSV,  \"${8:NO_ALARM }${9:MINOR }${10:MAJOR}\")",
                    "field(LSV,  \"${11:NO_ALARM }${12:MINOR }${13:MAJOR}\")",
                    "field(LLSV, \"${14:NO_ALARM }${15:MINOR }${16:MAJOR}\")",
                    "field(ZSV,  \"${17:NO_ALARM }${18:MINOR }${19:MAJOR}\")",
                    "field(OSV,  \"${20:NO_ALARM }${21:MINOR }${22:MAJOR}\")",
                    "field(COSV, \"${23:NO_ALARM }${24:MINOR }${25:MAJOR}\")",
                    "field(HYST, \"${28:double}\")${0}"]
    },
  
    "analog input": {
        "prefix": "epics.record.ai",
        "body": [   "record(ai, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(DTYP, \"${3:Soft Channel }${4:stream}\")",
                    "    field(SCAN, \"${5:.1 second }${6:1 second }${7:I/O Intr }${8:Event }${9:Passive}\")",
                    "    field(INP,  \"${10:input link}\")",
                    "}${0}"]
    },
    "analog output": {
        "prefix": "epics.record.ao",
        "body": [   "record(ao, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(PREC, \"${3:3}\")",
                    "    field(EGU,  \"${4:Volts}\")",
                    "    field(DRVL, \"${5:-10}\")",
                    "    field(DRVH, \"${6:+10}\")",
                    "    field(VAL,  \"${7:0.000}\")",    
                    "}${0}"]
    },
    "binary input": {
        "prefix": "epics.record.bi",
        "body": [   "record(bi, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(VAL,  \"${3:value}\")",
                    "    field(ZNAM, \"${4:zero_name}\")    field(ZSV, \"${5:NO_ALARM }${6:MINOR }${7:MAJOR}\")",
                    "    field(ONAM, \"${8:one_name}\")     field(OSV, \"${9:NO_ALARM }${10:MINOR }${11:MAJOR}\")",
                    "    field(INP,  \"${12:input link}\")",
                    "}${0}"]
    },
    "binary output": {
        "prefix": "epics.record.bo",
        "body": [   "record(bo, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(VAL,  \"${3:value}\")",   
                    "    field(ZNAM, \"${4:zero_name}\")    field(ZSV, \"${5:NO_ALARM }${6:MINOR }${7:MAJOR}\")", 
                    "    field(ONAM, \"${8:one_name}\")     field(OSV, \"${9:NO_ALARM }${10:MINOR }${11:MAJOR}\")",
                    "    field(HIGH, \"${12:seconds_to_hold_high_state}\")",
                    "    field(OUT,  \"${13:output link}\")",
                    "}${0}"]
    },
    "aSub Record": {
        "prefix": "epics.record.asub",
        "body": [   "record(aSub, \"${1:record_name}\") {",    
                    "    field(DESC, \"${2:description}\")",
                    "    field(SNAM, \"${3:my_asub_routine}\")",
                    "    field(INPA, \"${4:record_name}\")",
                    "    field(FTA,  \"${5:STRING }${6:CHAR }${7:UCHAR }${8:SHORT }${9:USHORT }${10:LONG }${11:ULONG }${12:FLOAT }${13:DOUBLE }${14:ENUM}\")",
                    "    field(NOA,  \"${15:number_of_element}\")",
                    "    field(OUTA, \"${16:record_name}\")",
                    "    field(FTVA, \"${17:STRING }${18:CHAR }${19:UCHAR }${20:SHORT }${21:USHORT }${22:LONG }${23:ULONG }${24:FLOAT }${25:DOUBLE }${26:ENUM}\")",
                    "    field(NOVA, \"${27:number_of_element}\")",
                    "}${0}"]
    }, 
    "calculation": {
        "prefix": "epics.record.calc",
        "body": [   "record(calc, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(CALC, \"${3:a+b}\")",
                    "    field(INPA, \"${4:record_name}\")",
                    "    field(INPB, \"${5:record_name}\")",
                    "}${0}"]
    }, 
    "calculation output": {
        "prefix": "epics.record.calcout",
        "body": [   "record(calcout, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(CALC, \"${3:a+b}\")",
                    "    field(INPA, \"${4:record_name}\")",
                    "    field(INPB, \"${5:record_name}\")",
                    "    field(OUT,  \"${6:record_name}\")",
                    "}${0}"]
    }, 
    "data fanout": {
        "prefix": "epics.record.dfanout",
        "body": [   "record(dfanout, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(OUTA, \"${3:record_name}\")",
                    "    field(OUTB, \"${4:record_name}\")",
                    "    field(DOL,  \"${5:record_name}\")",
                    "    field(OMSL, \"${6:supervisory }${7:closed_loop}\")",
                    "}${0}"]
    }, 
    "fanout": {
        "prefix": "epics.record.fanout",
        "body": [   "record(fanout, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(SELM, \"${3:All }${4:Specified }${5:Mask}\")",
                    "    field(SELN, \"${6:1}\")",
                    "    field(SELL, \"${7:record_name}\")",
                    "    field(LNK1, \"${8:record_name}\")",
                    "    field(LNK2, \"${9:record_name}\")",
                    "}${0}"]
    }, 
    "select": {
        "prefix": "epics.record.sel",
        "body": [   "record(sel, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(SELM, \"${3:All }${4:Specified }${5:Mask}\")",
                    "    field(SELN, \"${6:1}\")",
                    "    field(SELL, \"${7:record_name}\")",
                    "    field(INPA, \"${8:record_name}\")",
                    "    field(INPB, \"${9:record_name}\")",
                    "    field(INPC, \"${10:record_name}\")",
                    "}${0}"]
    }, 
    "sequence": {
        "prefix": "epics.record.seq",
        "body": [   "record(seq, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(SELM, \"${3:All }${4:Specified }${5:Mask}\")",
                    "    field(SELN, \"${6:1}\")",
                    "    field(SELL, \"${7:record_name}\")",
                    "    field(DLY1, \"${8:double}\")",
                    "    field(DOL1, \"${9:record_name}\")",
                    "    field(LNK1, \"${10:record_name}\")",
                    "    field(DLY2, \"${11:double}\")",
                    "    field(DOL2, \"${12:record_name}\")",
                    "    field(LNK2, \"${13:record_name}\")",
                    "}${0}"]
    }, 
    "waveform": {
        "prefix": "epics.record.waveform",
        "body": [   "record(waveform, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(NELM, \"${3:256}\")",
                    "    field(FTVL, \"${4:FLOAT}\")",
                    "}${0}"]
    },
    "mbbo": {
        "prefix": "epics.record.mbbo",
        "body": [   "record(mbbo, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(OUT,  \"${3:output_link}\")",
                    "    field(ZRST, \"${04:zero_string}\")        field(ZRVL, \"${05:zero_value}\")",
                    "    field(ONST, \"${06:one_string}\")         field(ONVL, \"${07:one_value}\")",
                    "    field(TWST, \"${08:two_string}\")         field(TWVL, \"${09:two_value}\")",
                    "    field(THST, \"${10:three_string}\")       field(THVL, \"${11:three_value}\")",
                    "    field(FRST, \"${12:four_string}\")        field(FRVL, \"${13:four_value}\")",
                    "    field(FVST, \"${14:five_string}\")        field(FVVL, \"${15:five_value}\")",
                    "    field(SXST, \"${16:six_string}\")         field(SXVL, \"${17:six_value}\")",
                    "    field(SVST, \"${18:seven_string}\")       field(SVVL, \"${19:seven_value}\")",
                    "    field(EIST, \"${20:height_string}\")      field(EIVL, \"${21:heigt_value}\")",
                    "    field(NIST, \"${22:nine_string}\")        field(NIVL, \"${23:nine_value}\")",
                    "    field(TEST, \"${24:ten_string}\")         field(TEVL, \"${25:ten_value}\")",
                    "    field(ELST, \"${26:eleven_string}\")      field(ELVL, \"${27:eleven_value}\")",
                    "    field(TVST, \"${28:twelve_string}\")      field(TVVL, \"${29:twelve_value}\")",
                    "    field(TTST, \"${30:thirteen_string}\")    field(TTVL, \"${31:thirteen_value}\")",
                    "    field(FTST, \"${32:fourteen_string}\")    field(FTVL, \"${33:fourteen_value}\")",
                    "    field(FFST, \"${34:fifteen_string}\")     field(FFVL, \"${35:fifteen_value}\")",
                    "}${0}"]
    },
    "mbboDirect": {
        "prefix": "epics.record.mbboDirect",
        "body": [   "record(mbboDirect, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(OUT,  \"${3:output_link}\")",
                    "    field(B0,   \"${04:bit_0_value}\")",
                    "    field(B1,   \"${05:bit_1_value}\")",
                    "    field(B2,   \"${06:bit_2_value}\")",
                    "    field(B3,   \"${07:bit_3_value}\")",
                    "    field(B4,   \"${08:bit_4_value}\")",
                    "    field(B5,   \"${09:bit_5_value}\")",
                    "    field(B6,   \"${10:bit_6_value}\")",
                    "    field(B7,   \"${11:bit_7_value}\")",
                    "    field(B8,   \"${12:bit_8_value}\")",
                    "    field(B9,   \"${13:bit_9_value}\")",
                    "    field(BA,   \"${14:bit_10_value}\")",
                    "    field(BB,   \"${15:bit_11_value}\")",
                    "    field(BC,   \"${16:bit_12_value}\")",
                    "    field(BD,   \"${17:bit_13_value}\")",
                    "    field(BE,   \"${18:bit_14_value}\")",
                    "    field(BF,   \"${19:bit_15_value}\")",
                    "}${0}"]
    },
    "mbbi": {
        "prefix": "epics.record.mbbi",
        "body": [   "record(mbbi, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(INP,  \"${03:input_link}\")",
                    "    field(ZRST, \"${04:zero_string}\")        field(ZRVL, \"${05:zero_value}\")",
                    "    field(ONST, \"${06:one_string}\")         field(ONVL, \"${07:one_value}\")",
                    "    field(TWST, \"${08:two_string}\")         field(TWVL, \"${09:two_value}\")",
                    "    field(THST, \"${10:three_string}\")       field(THVL, \"${11:three_value}\")",
                    "    field(FRST, \"${12:four_string}\")        field(FRVL, \"${13:four_value}\")",
                    "    field(FVST, \"${14:five_string}\")        field(FVVL, \"${15:five_value}\")",
                    "    field(SXST, \"${16:six_string}\")         field(SXVL, \"${17:six_value}\")",
                    "    field(SVST, \"${18:seven_string}\")       field(SVVL, \"${19:seven_value}\")",
                    "    field(EIST, \"${20:height_string}\")      field(EIVL, \"${21:heigt_value}\")",
                    "    field(NIST, \"${22:nine_string}\")        field(NIVL, \"${23:nine_value}\")",
                    "    field(TEST, \"${24:ten_string}\")         field(TEVL, \"${25:ten_value}\")",
                    "    field(ELST, \"${26:eleven_string}\")      field(ELVL, \"${27:eleven_value}\")",
                    "    field(TVST, \"${28:twelve_string}\")      field(TVVL, \"${29:twelve_value}\")",
                    "    field(TTST, \"${30:thirteen_string}\")    field(TTVL, \"${31:thirteen_value}\")",
                    "    field(FTST, \"${32:fourteen_string}\")    field(FTVL, \"${33:fourteen_value}\")",
                    "    field(FFST, \"${34:fifteen_string}\")     field(FFVL, \"${35:fifteen_value}\")",
                    "}${0}"]
    },
    "mbbiDirect": {
        "prefix": "epics.record.mbbiDirect",
        "body": [   "record(mbbiDirect, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(INP,  \"${3:input_link}\")",
                    "    field(B0,   \"${04:bit_0_value}\")",
                    "    field(B1,   \"${05:bit_1_value}\")",
                    "    field(B2,   \"${06:bit_2_value}\")",
                    "    field(B3,   \"${07:bit_3_value}\")",
                    "    field(B4,   \"${08:bit_4_value}\")",
                    "    field(B5,   \"${09:bit_5_value}\")",
                    "    field(B6,   \"${10:bit_6_value}\")",
                    "    field(B7,   \"${11:bit_7_value}\")",
                    "    field(B8,   \"${12:bit_8_value}\")",
                    "    field(B9,   \"${13:bit_9_value}\")",
                    "    field(BA,   \"${14:bit_10_value}\")",
                    "    field(BB,   \"${15:bit_11_value}\")",
                    "    field(BC,   \"${16:bit_12_value}\")",
                    "    field(BD,   \"${17:bit_13_value}\")",
                    "    field(BE,   \"${18:bit_14_value}\")",
                    "    field(BF,   \"${19:bit_15_value}\")",
                    "}${0}"]
    },
    "stringin": {
        "prefix": "epics.record.stringin",
        "body": [   "record(stringin, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(DTYP, \"${3:Soft Channel }${4:stream}\")",
                    "    field(INP,  \"${5:input_link}\")",
                    "}${0}"]
    },
    "stringout": {
        "prefix": "epics.record.stringout",
        "body": [   "record(stringout, \"${1:record_name}\") {",
                    "    field(DESC, \"${2:description}\")",
                    "    field(OUT,  \"${3:output_link}\")",
                    "}${0}"]
    },
    "header": {
        "prefix": "epics.header",
        "body": [   "# file: ${TM_FILENAME}",
                    "# author: ${1:victor.nadot@cea.fr}",
                    "# company: ${2:CEA / DRF / IRFU / LDISC}",
                    "# description: ${3:this file is doing that ...}",
                    "# macros:",
                    "# - >> Mandatory",
                    "# - ${4:P}: ${${4:P}} | ${5:PV prefix}",
                    "# - >> Optional",
                    "# - ${6:EGU}: ${${6:P}=${7:Volts}} | ${8:PV unit}",
                    "${0}"]
    }
    }
}
